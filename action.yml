name: Setup Micro-Manager Test Device Adapters

description: >
  Downloads a specified or latest release of the pymmcore-plus test device adapters
  and extracts them into the given destination directory (or to sensible OS defaults).

inputs:
  destination:
    description: |
      (Optional) Destination directory for the test device adapters.
      If empty, defaults to:
        - Windows: %LOCALAPPDATA%\pymmcore-plus\pymmcore-plus\mm
        - macOS: ~/Library/Application Support/pymmcore-plus/mm
        - Linux: ~/.local/share/pymmcore-plus/mm
    required: false
    default: ""
  version:
    description: Version tag to install (or "latest")
    required: false
    default: "latest"

outputs:
  version:
    description: Resolved adapter version
    value: ${{ steps.get-version.outputs.version }}
  mm-data-dir:
    description: Directory where adapters were extracted
    value: ${{ env.MM_DATA_DIR }}

runs:
  using: composite
  steps:
    - name: Determine version
      shell: bash
      id: get-version
      run: |
        if [ "${{ inputs.version }}" = "latest" ]; then
          version=$(curl -s https://api.github.com/repos/pymmcore-plus/mm-test-adapters/releases/latest | jq -r .tag_name)
        else
          version="${{ inputs.version }}"
        fi
        echo "version=$version" >> $GITHUB_ENV
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Download adapters ZIP
      shell: bash
      run: |
        url="https://github.com/pymmcore-plus/mm-test-adapters/releases/download/$version/mm-test-adapters-${{ runner.os }}-${{ runner.arch }}.zip"
        curl -L -f -o mm-test-adapters.zip "$url"

    - name: Set MM_DATA_DIR
      shell: bash
      id: set-path
      run: |
        if [ -n "${{ inputs.destination }}" ]; then
          base="${{ inputs.destination }}"
        else
          case "${{ runner.os }}" in
            Windows) base="$LOCALAPPDATA/pymmcore-plus/pymmcore-plus/mm" ;;
            macOS)   base="$HOME/Library/Application Support/pymmcore-plus/mm" ;;
            Linux)   base="$HOME/.local/share/pymmcore-plus/mm" ;;
          esac
        fi

        ver=${{ steps.get-version.outputs.version }}
        out="$base/Micro-Manager-$ver"
        echo "mm-data-dir=$out" >> $GITHUB_ENV
        echo "mm-data-dir=$out" >> $GITHUB_OUTPUT

    - name: Extract adapters
      shell: bash
      run: |
        out=${{ steps.set-path.outputs.mm-data-dir }}
        mkdir -p "$out"
        unzip -o mm-test-adapters.zip -d "$out"
        rm mm-test-adapters.zip
